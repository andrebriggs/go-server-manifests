---
apiVersion: v1
data:
  cassandra.contact-points: jaeger-cassandra:9042
  cassandra.datacenter.name: dc1
  cassandra.keyspace: jaeger_v1_dc1
  cassandra.port: "9042"
  cassandra.schema.mode: prod
  cassandra.servers: jaeger-cassandra
  collector.host-port: jaeger-collector:14267
  collector.http-port: "14268"
  collector.port: "14267"
  collector.zipkin.http-port: "9411"
  es.nodes-wan-only: "false"
  es.password: changeme
  es.server-urls: http://elasticsearch:9200
  es.username: elastic
  hotrod.agent-host: jaeger-agent
  hotrod.agent-port: "6831"
  query.base-path: /
  query.health-check-http-port: "16687"
  query.port: "16686"
  span-storage.type: cassandra
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: jaeger
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: jaeger
    helm.sh/chart: jaeger-0.9.0
  name: jaeger
  namespace: jaeger

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: cassandra
    chart: cassandra-0.11.0
    heritage: Tiller
    release: jaeger
  name: jaeger-cassandra
  namespace: jaeger
spec:
  clusterIP: None
  ports:
  - name: intra
    port: 7000
    targetPort: 7000
  - name: tls
    port: 7001
    targetPort: 7001
  - name: jmx
    port: 7199
    targetPort: 7199
  - name: cql
    port: 9042
    targetPort: 9042
  - name: thrift
    port: 9160
    targetPort: 9160
  selector:
    app: cassandra
    release: jaeger
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: agent
    app.kubernetes.io/instance: jaeger
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: jaeger
    helm.sh/chart: jaeger-0.9.0
  name: jaeger-agent
  namespace: jaeger
spec:
  ports:
  - name: agent-zipkin-thrift
    port: 5775
    protocol: UDP
    targetPort: 5775
  - name: agent-compact
    port: 6831
    protocol: UDP
    targetPort: 6831
  - name: agent-binary
    port: 6832
    protocol: UDP
    targetPort: 6832
  - name: agent-sampling
    port: 5778
    protocol: TCP
    targetPort: 5778
  selector:
    app.kubernetes.io/component: agent
    app.kubernetes.io/instance: jaeger
    app.kubernetes.io/name: jaeger
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: collector
    app.kubernetes.io/instance: jaeger
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: jaeger
    helm.sh/chart: jaeger-0.9.0
  name: jaeger-collector
  namespace: jaeger
spec:
  ports:
  - name: jaeger-collector-tchannel
    port: 14267
    protocol: TCP
    targetPort: tchannel
  - name: jaeger-collector-http
    port: 14268
    protocol: TCP
    targetPort: http
  - name: jaeger-collector-zipkin
    port: 9411
    protocol: TCP
    targetPort: zipkin
  selector:
    app.kubernetes.io/component: collector
    app.kubernetes.io/instance: jaeger
    app.kubernetes.io/name: jaeger
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: query
    app.kubernetes.io/instance: jaeger
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: jaeger
    helm.sh/chart: jaeger-0.9.0
  name: jaeger-query
  namespace: jaeger
spec:
  ports:
  - name: jaeger-query
    port: 80
    protocol: TCP
    targetPort: 16686
  selector:
    app.kubernetes.io/component: query
    app.kubernetes.io/instance: jaeger
    app.kubernetes.io/name: jaeger
  type: ClusterIP

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app.kubernetes.io/component: agent
    app.kubernetes.io/instance: jaeger
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: jaeger
    helm.sh/chart: jaeger-0.9.0
  name: jaeger-agent
  namespace: jaeger
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: agent
      app.kubernetes.io/instance: jaeger
      app.kubernetes.io/name: jaeger
  template:
    metadata:
      labels:
        app.kubernetes.io/component: agent
        app.kubernetes.io/instance: jaeger
        app.kubernetes.io/name: jaeger
    spec:
      containers:
      - env:
        - name: COLLECTOR_HOST_PORT
          valueFrom:
            configMapKeyRef:
              key: collector.host-port
              name: jaeger
        image: jaegertracing/jaeger-agent:1.10.0
        imagePullPolicy: IfNotPresent
        name: jaeger-agent
        ports:
        - containerPort: 5775
          protocol: UDP
        - containerPort: 6831
          protocol: UDP
        - containerPort: 6832
          protocol: UDP
        - containerPort: 5778
          protocol: TCP
        resources: {}
      dnsPolicy: ClusterFirst
      nodeSelector: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "false"
  labels:
    app.kubernetes.io/component: collector
    app.kubernetes.io/instance: jaeger
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: jaeger
    helm.sh/chart: jaeger-0.9.0
  name: jaeger-collector
  namespace: jaeger
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: collector
      app.kubernetes.io/instance: jaeger
      app.kubernetes.io/name: jaeger
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: collector
        app.kubernetes.io/instance: jaeger
        app.kubernetes.io/name: jaeger
    spec:
      containers:
      - env:
        - name: SPAN_STORAGE_TYPE
          valueFrom:
            configMapKeyRef:
              key: span-storage.type
              name: jaeger
        - name: CASSANDRA_SERVERS
          valueFrom:
            configMapKeyRef:
              key: cassandra.servers
              name: jaeger
        - name: CASSANDRA_PORT
          valueFrom:
            configMapKeyRef:
              key: cassandra.port
              name: jaeger
        - name: CASSANDRA_KEYSPACE
          valueFrom:
            configMapKeyRef:
              key: cassandra.keyspace
              name: jaeger
        - name: COLLECTOR_PORT
          valueFrom:
            configMapKeyRef:
              key: collector.port
              name: jaeger
        - name: COLLECTOR_HTTP_PORT
          valueFrom:
            configMapKeyRef:
              key: collector.http-port
              name: jaeger
        - name: COLLECTOR_ZIPKIN_HTTP_PORT
          valueFrom:
            configMapKeyRef:
              key: collector.zipkin.http-port
              name: jaeger
        image: jaegertracing/jaeger-collector:1.10.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            port: healthcheck
          initialDelaySeconds: 10
        name: jaeger-collector
        ports:
        - containerPort: 14267
          name: tchannel
          protocol: TCP
        - containerPort: 14268
          name: http
          protocol: TCP
        - containerPort: 14269
          name: healthcheck
          protocol: TCP
        - containerPort: 9411
          name: zipkin
          protocol: TCP
        readinessProbe:
          httpGet:
            port: healthcheck
          initialDelaySeconds: 10
        resources: {}
      dnsPolicy: ClusterFirst
      nodeSelector: {}
      restartPolicy: Always

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: query
    app.kubernetes.io/instance: jaeger
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: jaeger
    helm.sh/chart: jaeger-0.9.0
  name: jaeger-query
  namespace: jaeger
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: query
      app.kubernetes.io/instance: jaeger
      app.kubernetes.io/name: jaeger
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: query
        app.kubernetes.io/instance: jaeger
        app.kubernetes.io/name: jaeger
    spec:
      containers:
      - env:
        - name: SPAN_STORAGE_TYPE
          valueFrom:
            configMapKeyRef:
              key: span-storage.type
              name: jaeger
        - name: CASSANDRA_SERVERS
          valueFrom:
            configMapKeyRef:
              key: cassandra.servers
              name: jaeger
        - name: CASSANDRA_PORT
          valueFrom:
            configMapKeyRef:
              key: cassandra.port
              name: jaeger
        - name: CASSANDRA_KEYSPACE
          valueFrom:
            configMapKeyRef:
              key: cassandra.keyspace
              name: jaeger
        - name: QUERY_PORT
          valueFrom:
            configMapKeyRef:
              key: query.port
              name: jaeger
        - name: QUERY_HEALTH_CHECK_HTTP_PORT
          valueFrom:
            configMapKeyRef:
              key: query.health-check-http-port
              name: jaeger
        - name: QUERY_BASE_PATH
          valueFrom:
            configMapKeyRef:
              key: query.base-path
              name: jaeger
        image: jaegertracing/jaeger-query:1.10.0
        imagePullPolicy: IfNotPresent
        name: jaeger-query
        ports:
        - containerPort: 16686
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /
            port: 16687
        resources: {}
      dnsPolicy: ClusterFirst
      nodeSelector: {}
      restartPolicy: Always

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: cassandra
    chart: cassandra-0.11.0
    heritage: Tiller
    release: jaeger
  name: jaeger-cassandra
  namespace: jaeger
spec:
  podManagementPolicy: OrderedReady
  replicas: 3
  selector:
    matchLabels:
      app: cassandra
      release: jaeger
  serviceName: jaeger-cassandra
  template:
    metadata:
      labels:
        app: cassandra
        release: jaeger
    spec:
      containers:
      - env:
        - name: CASSANDRA_SEEDS
          value: jaeger-cassandra-0.jaeger-cassandra.jaeger.svc.cluster.local
        - name: MAX_HEAP_SIZE
          value: 2048M
        - name: HEAP_NEWSIZE
          value: 512M
        - name: CASSANDRA_ENDPOINT_SNITCH
          value: GossipingPropertyFileSnitch
        - name: CASSANDRA_CLUSTER_NAME
          value: jaeger
        - name: CASSANDRA_DC
          value: dc1
        - name: CASSANDRA_RACK
          value: rack1
        - name: CASSANDRA_START_RPC
          value: "false"
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        image: cassandra:3.11.3
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - exec nodetool decommission
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - nodetool status
          failureThreshold: 3
          initialDelaySeconds: 90
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: jaeger-cassandra
        ports:
        - containerPort: 7000
          name: intra
        - containerPort: 7001
          name: tls
        - containerPort: 7199
          name: jmx
        - containerPort: 9042
          name: cql
        - containerPort: 9160
          name: thrift
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - nodetool status | grep -E "^UN\s+${POD_IP}"
          failureThreshold: 3
          initialDelaySeconds: 90
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        resources: {}
        volumeMounts:
        - mountPath: /var/lib/cassandra
          name: data
      hostNetwork: false
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: data
  updateStrategy:
    type: OnDelete

---
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app.kubernetes.io/component: cassandra-schema
    app.kubernetes.io/instance: jaeger
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: jaeger
    helm.sh/chart: jaeger-0.9.0
  name: jaeger-cassandra-schema
  namespace: jaeger
spec:
  activeDeadlineSeconds: 120
  template:
    metadata:
      name: jaeger-cassandra-schema
    spec:
      containers:
      - env:
        - name: CQLSH_HOST
          valueFrom:
            configMapKeyRef:
              key: cassandra.servers
              name: jaeger
        - name: MODE
          valueFrom:
            configMapKeyRef:
              key: cassandra.schema.mode
              name: jaeger
        - name: DATACENTER
          valueFrom:
            configMapKeyRef:
              key: cassandra.datacenter.name
              name: jaeger
        - name: CASSANDRA_PORT
          valueFrom:
            configMapKeyRef:
              key: cassandra.port
              name: jaeger
        image: jaegertracing/jaeger-cassandra-schema:1.10.0
        imagePullPolicy: IfNotPresent
        name: jaeger-cassandra-schema
        resources: {}
      restartPolicy: OnFailure

