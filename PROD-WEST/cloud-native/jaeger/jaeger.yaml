---
apiVersion: v1
data:
  cassandra.contact-points: cassandra:9042
  cassandra.datacenter.name: dc1
  cassandra.keyspace: jaeger_v1_dc1
  cassandra.port: "9042"
  cassandra.schema.mode: prod
  cassandra.servers: cassandra
  collector.host-port: jaeger-collector:14267
  collector.http-port: "14268"
  collector.port: "14267"
  collector.zipkin.http-port: "9411"
  es.nodes-wan-only: "false"
  es.password: changeme
  es.server-urls: http://elasticsearch-client.elasticsearch.svc.cluster.local:9200
  es.username: elastic
  hotrod.agent-host: jaeger-agent
  hotrod.agent-port: "6831"
  query.base-path: /
  query.health-check-http-port: "16687"
  query.port: "16686"
  span-storage.type: elasticsearch
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: jaeger
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: jaeger
    helm.sh/chart: jaeger-0.9.0
  name: jaeger
  namespace: jaeger

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: agent
    app.kubernetes.io/instance: jaeger
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: jaeger
    helm.sh/chart: jaeger-0.9.0
  name: jaeger-agent
  namespace: jaeger
spec:
  ports:
  - name: agent-zipkin-thrift
    port: 5775
    protocol: UDP
    targetPort: 5775
  - name: agent-compact
    port: 6831
    protocol: UDP
    targetPort: 6831
  - name: agent-binary
    port: 6832
    protocol: UDP
    targetPort: 6832
  - name: agent-sampling
    port: 5778
    protocol: TCP
    targetPort: 5778
  selector:
    app.kubernetes.io/component: agent
    app.kubernetes.io/instance: jaeger
    app.kubernetes.io/name: jaeger
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: collector
    app.kubernetes.io/instance: jaeger
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: jaeger
    helm.sh/chart: jaeger-0.9.0
  name: jaeger-collector
  namespace: jaeger
spec:
  ports:
  - name: jaeger-collector-tchannel
    port: 14267
    protocol: TCP
    targetPort: tchannel
  - name: jaeger-collector-http
    port: 14268
    protocol: TCP
    targetPort: http
  - name: jaeger-collector-zipkin
    port: 9411
    protocol: TCP
    targetPort: zipkin
  selector:
    app.kubernetes.io/component: collector
    app.kubernetes.io/instance: jaeger
    app.kubernetes.io/name: jaeger
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: query
    app.kubernetes.io/instance: jaeger
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: jaeger
    helm.sh/chart: jaeger-0.9.0
  name: jaeger-query
  namespace: jaeger
spec:
  ports:
  - name: jaeger-query
    port: 80
    protocol: TCP
    targetPort: 16686
  selector:
    app.kubernetes.io/component: query
    app.kubernetes.io/instance: jaeger
    app.kubernetes.io/name: jaeger
  type: ClusterIP

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app.kubernetes.io/component: agent
    app.kubernetes.io/instance: jaeger
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: jaeger
    helm.sh/chart: jaeger-0.9.0
  name: jaeger-agent
  namespace: jaeger
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: agent
      app.kubernetes.io/instance: jaeger
      app.kubernetes.io/name: jaeger
  template:
    metadata:
      labels:
        app.kubernetes.io/component: agent
        app.kubernetes.io/instance: jaeger
        app.kubernetes.io/name: jaeger
    spec:
      containers:
      - env:
        - name: COLLECTOR_HOST_PORT
          valueFrom:
            configMapKeyRef:
              key: collector.host-port
              name: jaeger
        image: jaegertracing/jaeger-agent:1.10.0
        imagePullPolicy: IfNotPresent
        name: jaeger-agent
        ports:
        - containerPort: 5775
          protocol: UDP
        - containerPort: 6831
          protocol: UDP
        - containerPort: 6832
          protocol: UDP
        - containerPort: 5778
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 256m
            memory: 128Mi
      dnsPolicy: ClusterFirst
      nodeSelector: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: "false"
  labels:
    app.kubernetes.io/component: collector
    app.kubernetes.io/instance: jaeger
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: jaeger
    helm.sh/chart: jaeger-0.9.0
  name: jaeger-collector
  namespace: jaeger
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: collector
      app.kubernetes.io/instance: jaeger
      app.kubernetes.io/name: jaeger
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: collector
        app.kubernetes.io/instance: jaeger
        app.kubernetes.io/name: jaeger
    spec:
      containers:
      - env:
        - name: SPAN_STORAGE_TYPE
          valueFrom:
            configMapKeyRef:
              key: span-storage.type
              name: jaeger
        - name: ES_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: es.password
              name: jaeger
        - name: ES_SERVER_URLS
          valueFrom:
            configMapKeyRef:
              key: es.server-urls
              name: jaeger
        - name: ES_USERNAME
          valueFrom:
            configMapKeyRef:
              key: es.username
              name: jaeger
        - name: COLLECTOR_PORT
          valueFrom:
            configMapKeyRef:
              key: collector.port
              name: jaeger
        - name: COLLECTOR_HTTP_PORT
          valueFrom:
            configMapKeyRef:
              key: collector.http-port
              name: jaeger
        - name: COLLECTOR_ZIPKIN_HTTP_PORT
          valueFrom:
            configMapKeyRef:
              key: collector.zipkin.http-port
              name: jaeger
        image: jaegertracing/jaeger-collector:1.10.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            port: healthcheck
          initialDelaySeconds: 10
        name: jaeger-collector
        ports:
        - containerPort: 14267
          name: tchannel
          protocol: TCP
        - containerPort: 14268
          name: http
          protocol: TCP
        - containerPort: 14269
          name: healthcheck
          protocol: TCP
        - containerPort: 9411
          name: zipkin
          protocol: TCP
        readinessProbe:
          httpGet:
            port: healthcheck
          initialDelaySeconds: 10
        resources:
          limits:
            cpu: 1
            memory: 1Gi
          requests:
            cpu: 500m
            memory: 512Mi
      dnsPolicy: ClusterFirst
      nodeSelector: {}
      restartPolicy: Always

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: query
    app.kubernetes.io/instance: jaeger
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: jaeger
    helm.sh/chart: jaeger-0.9.0
  name: jaeger-query
  namespace: jaeger
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/component: query
      app.kubernetes.io/instance: jaeger
      app.kubernetes.io/name: jaeger
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: query
        app.kubernetes.io/instance: jaeger
        app.kubernetes.io/name: jaeger
    spec:
      containers:
      - env:
        - name: SPAN_STORAGE_TYPE
          valueFrom:
            configMapKeyRef:
              key: span-storage.type
              name: jaeger
        - name: ES_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: es.password
              name: jaeger
        - name: ES_SERVER_URLS
          valueFrom:
            configMapKeyRef:
              key: es.server-urls
              name: jaeger
        - name: ES_USERNAME
          valueFrom:
            configMapKeyRef:
              key: es.username
              name: jaeger
        - name: QUERY_PORT
          valueFrom:
            configMapKeyRef:
              key: query.port
              name: jaeger
        - name: QUERY_HEALTH_CHECK_HTTP_PORT
          valueFrom:
            configMapKeyRef:
              key: query.health-check-http-port
              name: jaeger
        - name: QUERY_BASE_PATH
          valueFrom:
            configMapKeyRef:
              key: query.base-path
              name: jaeger
        image: jaegertracing/jaeger-query:1.10.0
        imagePullPolicy: IfNotPresent
        name: jaeger-query
        ports:
        - containerPort: 16686
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /
            port: 16687
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 256m
            memory: 128Mi
      dnsPolicy: ClusterFirst
      nodeSelector: {}
      restartPolicy: Always

---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  labels:
    app.kubernetes.io/component: spark
    app.kubernetes.io/instance: jaeger
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: jaeger
    helm.sh/chart: jaeger-0.9.0
  name: jaeger-spark
  namespace: jaeger
spec:
  failedJobsHistoryLimit: 5
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/component: spark
            app.kubernetes.io/instance: jaeger
            app.kubernetes.io/name: jaeger
        spec:
          containers:
          - env:
            - name: STORAGE
              valueFrom:
                configMapKeyRef:
                  key: span-storage.type
                  name: jaeger
            - name: ES_NODES
              valueFrom:
                configMapKeyRef:
                  key: es.server-urls
                  name: jaeger
            - name: ES_NODES_WAN_ONLY
              valueFrom:
                configMapKeyRef:
                  key: es.nodes-wan-only
                  name: jaeger
            - name: ES_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: es.password
                  name: jaeger
            - name: ES_USERNAME
              valueFrom:
                configMapKeyRef:
                  key: es.username
                  name: jaeger
            image: jaegertracing/spark-dependencies:latest
            imagePullPolicy: Always
            name: jaeger-spark
            resources:
              limits:
                cpu: 500m
                memory: 512Mi
              requests:
                cpu: 256m
                memory: 128Mi
          nodeSelector: {}
          restartPolicy: OnFailure
  schedule: 49 23 * * *
  successfulJobsHistoryLimit: 5

