---
apiVersion: v1
data:
  kibana.yml: |
    elasticsearch.url: http://elasticsearch-client.elasticsearch.svc.cluster.local:9200
    server.host: "0"
    server.name: kibana
kind: ConfigMap
metadata:
  labels:
    app: kibana
    chart: kibana-2.2.0
    heritage: Tiller
    release: kibana
  name: kibana
  namespace: kibana

---
apiVersion: v1
data:
  run.sh: |-
    @test "Test Status" {
      url="http://kibana:443/api/status"

      # retry for 1 minute
      run curl -s -o /dev/null -I -w "%{http_code}" --retry 30 --retry-delay 2 $url

      code=$(curl -s -o /dev/null -I -w "%{http_code}" $url)
      body=$(curl $url)
      if [ "$code" == "503" ]
      then
        skip "Kibana Unavailable (503), can't get status - see pod logs: $body"
      fi

      result=$(echo $body | jq -cr '.status.statuses[]')
      [ "$result" != "" ]

      result=$(echo $body | jq -cr '.status.statuses[] | select(.state != "green")')
      [ "$result" == "" ]
    }
kind: ConfigMap
metadata:
  labels:
    app: kibana
    chart: kibana-2.2.0
    heritage: Tiller
    release: kibana
  name: kibana-test
  namespace: kibana

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: kibana
    chart: kibana-2.2.0
    heritage: Tiller
    release: kibana
  name: kibana
  namespace: kibana
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 5601
  selector:
    app: kibana
    release: kibana
  type: ClusterIP

---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    helm.sh/hook: test-success
  labels:
    app: kibana
    chart: kibana-2.2.0
    heritage: Tiller
    release: kibana
  name: kibana-test
  namespace: kibana
spec:
  containers:
  - command:
    - /tools/bats/bats
    - -t
    - /tests/run.sh
    image: dwdraju/alpine-curl-jq
    name: kibana-test
    volumeMounts:
    - mountPath: /tests
      name: tests
      readOnly: true
    - mountPath: /tools
      name: tools
  initContainers:
  - command:
    - bash
    - -c
    - |
      set -ex
      # copy bats to tools dir
      cp -R /usr/local/libexec/ /tools/bats/
    image: dduportal/bats:0.4.0
    name: test-framework
    volumeMounts:
    - mountPath: /tools
      name: tools
  restartPolicy: Never
  volumes:
  - configMap:
      name: kibana-test
    name: tests
  - emptyDir: {}
    name: tools

---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  labels:
    app: kibana
    chart: kibana-2.2.0
    heritage: Tiller
    release: kibana
  name: kibana
  namespace: kibana
spec:
  replicas: 1
  revisionHistoryLimit: 3
  template:
    metadata:
      annotations:
        checksum/config: 5622c071e40db6738e8761f38cfc8403cedf464f8127a17db4ccac59d007f9df
      labels:
        app: kibana
        release: kibana
    spec:
      containers:
      - env: null
        image: docker.elastic.co/kibana/kibana-oss:6.7.0
        imagePullPolicy: IfNotPresent
        name: kibana
        ports:
        - containerPort: 5601
          name: kibana
          protocol: TCP
        resources: {}
        volumeMounts:
        - mountPath: /usr/share/kibana/config/kibana.yml
          name: kibana
          subPath: kibana.yml
      serviceAccountName: default
      tolerations: []
      volumes:
      - configMap:
          name: kibana
        name: kibana

